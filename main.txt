package main

import (
	"errors"
	"fmt"
	"log"
	"os"
)

var nameaa error = errors.New("Adilet")

func first() error {

	err := second()
	if err != nil {
		return Wrapper("Business-Logic", "first", "WWWWHHAT", err)
	}
	return nil
}
func second() error {
	err := third()
	if err != nil {
		return Wrapper("Service", "second", "What is the fuck", err)

	}
	return nil
}

func third() error {
	return Wrapper("Repository", "third", "Idk", nameaa)
}

func main() {
	loog := log.New(os.Stdout, "INFO: ", log.Ldate|log.Ltime|log.Llongfile)
	if err := first(); err != nil {

		if errors.Is(err, nameaa) {
			loog.Println(Wrapper("Application Runner", "main", "The last receiver of that error", err))
		}

	}
}
func Wrapper(layer, functionName, context string, err error) error {
	return fmt.Errorf("%s %w", fmt.Sprintf("[Layer:%s,Function: %s,Context: %s]--->", layer, functionName, context), err)
}
